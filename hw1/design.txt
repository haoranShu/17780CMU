1. Supported API

	public permGenerator(List<T> list)

	public permGenerator(List<T> list, Random rnd)

	public static T List<T> getNextPermutation()

	public static T List<List<T>> getPermutations(int N)

	public static boolean hasExhausted()

2. Input, Output, Side Effect

	Input:
		T[], List<T>, Collections<T>, Stream<T>?
		-->
		List<T>

	Output:
		List<T>

	Side Effect:
		Field objects (:class:List<T>) modified each time

3. Use Case

a.
	List<Integer> mylist;
	permGenerator mygenerator = new permGenerator(mylist);

	while (!mygenerator.hasExhausted()) {
		System.out.println(mygenerator.getNextPermutation());
	}

b.
	List<Integer> mylist;
	permGenerator mygenerator = new permGenerator(mylist);

	List<List<Integer>> results = mygenerator.getPermutations(2);
	for (int i = 0; i < results.length(); ++i) {
		System.out.println(results[0][i] + ', ' + results[1][i]);
	}

c.
	List<Integer> mylist;
	Random rnd = new Random();
	permGenerator mygenerator = new permGenerator(mylist, rnd);


